from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.types import Message,CallbackQuery

import app.keyboards as kb


router = Router()

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
user_ages = {}
user_male = {}
age_asked = set()  # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ –±—ã–ª –∑–∞–¥–∞–Ω –≤–æ–ø—Ä–æ—Å –æ –≤–æ–∑—Ä–∞—Å—Ç–µ
user_films = {}    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–µ–±–µ —Ñ–∏–ª—å–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π. –î–ª—è –Ω–∞—á–∞–ª–∞, –∫–∞–∫–æ–π —É —Ç–µ–±—è –ø–æ–ª?', 
        reply_markup=kb.kb_male
    )

@router.message(F.text.in_(['–ú—É–∂—Å–∫–æ–π üë®üèª‚Äçü¶∞', '–ñ–µ–Ω—Å–∫–∏–π üë©üèª']))
async def ask_male(message: Message):
    user_id = message.from_user.id
    male = message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª
    user_male[user_id] = male

    # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ø—Ä–æ—Å–∏–ª–∏ –æ –≤–æ–∑—Ä–∞—Å—Ç–µ
    age_asked.add(user_id)

    await message.answer('–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç.', reply_markup=None)

@router.message(F.text.isdigit())
async def save_age(message: Message):
    user_id = message.from_user.id
    age = int(message.text)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_ages[user_id] = age
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ age_asked, —Ç.–∫. –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    age_asked.discard(user_id)

    await message.answer(f'–°–ø–∞—Å–∏–±–æ! –¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {age} –ª–µ—Ç.')
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=kb.main)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞, –µ—Å–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –µ—â–µ –Ω–µ –±—ã–ª —É–∫–∞–∑–∞–Ω
@router.message(lambda message: message.from_user.id in age_asked)
async def invalid_age_input(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º.")

@router.message(F.text.in_(['–ü–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º üéû']))
async def film_selection(message: Message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    selection_message = await message.answer(
        f'{message.from_user.first_name}, –¥–∞–≤–∞–π –ø—Ä–æ–≤–µ–¥–µ–º —ç–∫—Å–ø—Ä–µ—Å—Å –ø–æ–¥–±–æ—Ä–∫—É, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–¥ —Ç–µ–±—è. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å 5 —Ñ–∏–ª—å–º–æ–≤, –±–æ—Ç –Ω–∞—á–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ. –í—ã–±–µ—Ä–∏ —Ñ–∏–ª—å–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Å–º–æ—Ç—Ä–µ–ª –∏–ª–∏ —Ö–æ—Ç–µ–ª –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å',
        reply_markup=await kb.inline_film()
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
    user_films[message.from_user.id] = {
        'selection_message_id': selection_message.message_id,
        'films': []
    }

@router.callback_query(lambda callback: callback.data in kb.films_for_selection)
async def handle_film_selection(callback: CallbackQuery):
    user_id = callback.from_user.id
    selected_film = callback.data
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    if user_id not in user_films:
        user_films[user_id] = {
            'selection_message_id': None,
            'films': []
        }

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å–º –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –±—ã–ª –≤—ã–±—Ä–∞–Ω
    if selected_film not in user_films[user_id]['films']:
        user_films[user_id]['films'].append(selected_film)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–æ –ª–∏ 5 —Ñ–∏–ª—å–º–æ–≤
    films_count = len(user_films[user_id]['films'])
    films_list = ', '.join(user_films[user_id]['films'])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∏–ª—å–º–æ–≤
    message_text = f'–í—ã–±—Ä–∞–ª: {selected_film}. –í—Å–µ–≥–æ –≤—ã–±—Ä–∞–Ω–æ —Ñ–∏–ª—å–º–æ–≤: {films_count}.\n–¢—ã –≤—ã–±—Ä–∞–ª: {films_list}'

    if films_count >= 5:
        message_text += '\n–¢–µ–ø–µ—Ä—å –±–æ—Ç –Ω–∞—á–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.'
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É

        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.message.edit_text(message_text, reply_markup=None)
    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.message.edit_text(message_text, reply_markup=await kb.inline_film())



